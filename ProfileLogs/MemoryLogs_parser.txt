10000  lines inserted into the DB
15466  lines inserted into the DB
Filename: parser.py

Line #    Mem usage    Increment   Line Contents
================================================
    38    7.621 MiB    0.000 MiB   @profile
    39                             def parse():
    40                             
    41    7.621 MiB    0.000 MiB   	count = 0
    42    7.621 MiB    0.000 MiB   	urlId = 0
    43    7.621 MiB    0.000 MiB   	headlineId = 0
    44    7.621 MiB    0.000 MiB   	timeCombId = 0
    45    7.621 MiB    0.000 MiB   	timeId = 0
    46    7.621 MiB    0.000 MiB   	timeCombId = 0 
    47    7.621 MiB    0.000 MiB   	stime_curr = ""
    48    7.621 MiB    0.000 MiB   	stime_curr_timestamp = 0
    49    7.621 MiB    0.000 MiB   	etime_curr = ""
    50    7.621 MiB    0.000 MiB   	etime_curr_timestamp = 0
    51                             
    52    7.621 MiB    0.000 MiB   	timeCombmap = {}
    53    7.621 MiB    0.000 MiB   	Time = {}
    54    7.621 MiB    0.000 MiB   	headline_sha1 = {}
    55    7.621 MiB    0.000 MiB   	url_sha1 = {}
    56                             
    57    7.621 MiB    0.000 MiB   	sql_default_headline = "INSERT INTO headline (headlineId, headline) VALUES "
    58    7.621 MiB    0.000 MiB   	sql_default_url = "INSERT INTO url (urlId, url) VALUES "
    59    7.621 MiB    0.000 MiB   	sql_default_time = "INSERT INTO time (timeId, time) VALUES "
    60    7.621 MiB    0.000 MiB   	sql_default_mapping = "INSERT INTO mapping (urlId, headlineId, timeCombId, sourceId) VALUES "
    61    7.621 MiB    0.000 MiB   	sql_default_timeComb = "INSERT INTO timeComb (timeCombId, startDate, endDate) VALUES "
    62                             
    63    7.621 MiB    0.000 MiB   	sql_headline = sql_default_headline
    64    7.621 MiB    0.000 MiB   	sql_url = sql_default_url
    65    7.621 MiB    0.000 MiB   	sql_time = sql_default_time
    66    7.621 MiB    0.000 MiB   	sql_mapping = sql_default_mapping
    67    7.621 MiB    0.000 MiB   	sql_timeComb = sql_default_timeComb
    68                             
    69    7.621 MiB    0.000 MiB   	flag_url = 0
    70    7.621 MiB    0.000 MiB   	flag_headline = 0
    71    7.621 MiB    0.000 MiB   	flag_time = 0
    72    7.621 MiB    0.000 MiB   	flag_mapping = 1
    73    7.621 MiB    0.000 MiB   	flag_timeComb = 0
    74                             
    75    7.621 MiB    0.000 MiB   	parser = open("Data/1.csv", "r")
    76                             
    77    8.578 MiB    0.957 MiB   	conn = db.connect('news')
    78    8.578 MiB    0.000 MiB   	cursor=conn.cursor()
    79                             
    80   13.762 MiB    5.184 MiB   	for i in parser:
    81                             
    82   13.762 MiB    0.000 MiB   		if (count%MOD  == 0):
    83   13.168 MiB   -0.594 MiB   			sql_headline = sql_default_headline
    84   13.168 MiB    0.000 MiB   			sql_url = sql_default_url
    85   13.168 MiB    0.000 MiB   			sql_time = sql_default_time
    86   13.168 MiB    0.000 MiB   			sql_mapping = sql_default_mapping
    87   13.168 MiB    0.000 MiB   			sql_timeComb = sql_default_timeComb
    88                             			
    89   13.168 MiB    0.000 MiB   			flag_url = 0
    90   13.168 MiB    0.000 MiB   			flag_headline = 0
    91   13.168 MiB    0.000 MiB   			flag_time = 0
    92   13.168 MiB    0.000 MiB   			flag_timeComb = 0
    93                             
    94   13.762 MiB    0.594 MiB   		line = i.split(",")
    95   13.762 MiB    0.000 MiB   		temp_headline = str( (line[1]).replace("\"","\\\"").replace("\'","\\\'").strip() )
    96   13.762 MiB    0.000 MiB   		temp_url = str( (line[5]).replace("\"","\\\"").replace("\'","\\\'").strip() )
    97                             		
    98   13.762 MiB    0.000 MiB   		temp_url_sha1 = hashlib.sha1(temp_url).hexdigest()
    99   13.762 MiB    0.000 MiB   		temp_headline_sha1 = hashlib.sha1(temp_headline).hexdigest()
   100                             
   101   13.762 MiB    0.000 MiB   		if temp_url_sha1 not in url_sha1.keys():
   102   13.762 MiB    0.000 MiB   			flag_url = 1
   103   13.762 MiB    0.000 MiB   			urlId+=1
   104   13.762 MiB    0.000 MiB   			url_sha1[temp_url_sha1] = str(urlId)
   105   13.762 MiB    0.000 MiB   			sql_url+="(\""+str(urlId)+"\" , \""+temp_url+ "\"), "
   106                             
   107   13.762 MiB    0.000 MiB   		if temp_headline_sha1 not in headline_sha1.keys():
   108   13.762 MiB    0.000 MiB   			flag_headline = 1
   109   13.762 MiB    0.000 MiB   			headlineId+=1
   110   13.762 MiB    0.000 MiB   			headline_sha1[temp_headline_sha1] = str(headlineId)
   111   13.762 MiB    0.000 MiB   			sql_headline+="(\""+str(headlineId)+"\" , \""+temp_headline + "\"), "
   112                             		
   113   13.762 MiB    0.000 MiB   		stime = str(line[2]).strip()
   114   13.762 MiB    0.000 MiB   		if stime!=stime_curr:	
   115   13.738 MiB   -0.023 MiB   			stime_curr = stime
   116   13.738 MiB    0.000 MiB   			stime = int(date_to_timestamp(stime))
   117   13.738 MiB    0.000 MiB   			stime_curr_timestamp = stime 
   118   13.738 MiB    0.000 MiB   			if stime not in Time.keys() :
   119    8.605 MiB   -5.133 MiB   				timeId+=1
   120    8.605 MiB    0.000 MiB   				flag_time = 1
   121    8.605 MiB    0.000 MiB   				Time[stime]=str(timeId)
   122    8.605 MiB    0.000 MiB   				sql_time+= "(\""+str(timeId)+"\" , \"" + str(stime) + "\"), "
   123                             				
   124                             		else:
   125   13.762 MiB    5.156 MiB   			stime=stime_curr_timestamp
   126                             
   127   13.762 MiB    0.000 MiB   		etime = str(line[3]).strip()
   128   13.762 MiB    0.000 MiB   		if(etime!=etime_curr):		
   129   13.734 MiB   -0.027 MiB   			etime_curr = etime
   130   13.734 MiB    0.000 MiB   			etime = int(date_to_timestamp( etime ))
   131   13.734 MiB    0.000 MiB   			etime_curr_timestamp = etime
   132   13.734 MiB    0.000 MiB   			if etime not in Time.keys() :
   133    9.012 MiB   -4.723 MiB   				timeId+=1
   134    9.012 MiB    0.000 MiB   				flag_time = 1
   135    9.012 MiB    0.000 MiB   				Time[etime]=str(timeId)
   136    9.012 MiB    0.000 MiB   				sql_time+= "(\""+str(timeId)+"\" , \"" + str(etime) + "\"), "
   137                             		else:
   138   13.762 MiB    4.750 MiB   			etime=etime_curr_timestamp
   139                             
   140   13.762 MiB    0.000 MiB   		key = str(stime)+str(etime)
   141   13.762 MiB    0.000 MiB   		if key not in timeCombmap.keys():
   142   13.738 MiB   -0.023 MiB   			timeCombId+=1
   143   13.738 MiB    0.000 MiB   			flag_timeComb = 1 
   144   13.738 MiB    0.000 MiB   			timeCombmap[key] = str(timeCombId)
   145   13.738 MiB    0.000 MiB   			sql_timeComb+= "(\""+str(timeCombId)+"\", \""+Time[stime]+"\", \""+Time[etime]+"\"), "
   146                             
   147   13.762 MiB    0.023 MiB   		temp_sourceId = str(line[4]).strip()
   148                             
   149   13.762 MiB    0.000 MiB   		sql_mapping+= "(\""+url_sha1[temp_url_sha1] +"\" , \"" + headline_sha1[temp_headline_sha1] + "\", \"" + timeCombmap[key] + "\", \" " + temp_sourceId + "\"), "	
   150                             
   151   13.762 MiB    0.000 MiB   		count+=1	
   152   13.762 MiB    0.000 MiB   		if (count%MOD  == 0):
   153   13.160 MiB   -0.602 MiB   			if(flag_url == 1):
   154   13.160 MiB    0.000 MiB   				sql_url = sql_url[:-2]
   155   13.164 MiB    0.004 MiB   				db.write(sql_url, cursor, conn)
   156                             
   157   13.164 MiB    0.000 MiB   			if(flag_headline == 1):
   158   13.164 MiB    0.000 MiB   				sql_headline = sql_headline[:-2]
   159   13.164 MiB    0.000 MiB   				db.write(sql_headline, cursor, conn)
   160                             
   161   13.164 MiB    0.000 MiB   			if(flag_time == 1):
   162   13.164 MiB    0.000 MiB   				sql_time = sql_time[:-2]
   163   13.164 MiB    0.000 MiB   				db.write(sql_time, cursor, conn)
   164                             
   165   13.164 MiB    0.000 MiB   			if(flag_timeComb == 1):
   166   13.164 MiB    0.000 MiB   				sql_timeComb = sql_timeComb[:-2]
   167   13.164 MiB    0.000 MiB   				db.write(sql_timeComb, cursor, conn)
   168                             
   169   13.164 MiB    0.000 MiB   			if(flag_mapping == 1):
   170   13.164 MiB    0.000 MiB   				sql_mapping = sql_mapping[:-2]	
   171   13.164 MiB    0.000 MiB   				db.write(sql_mapping, cursor, conn)
   172                             			
   173   13.168 MiB    0.004 MiB   			print count," lines inserted into the DB"
   174                             
   175   13.762 MiB    0.594 MiB   	if(flag_url == 1):
   176   13.762 MiB    0.000 MiB   		sql_url = sql_url[:-2]
   177   13.762 MiB    0.000 MiB   		db.write(sql_url, cursor, conn)
   178   13.762 MiB    0.000 MiB   	if(flag_headline == 1):
   179   13.762 MiB    0.000 MiB   		sql_headline = sql_headline[:-2]
   180   13.762 MiB    0.000 MiB   		db.write(sql_headline, cursor, conn)
   181   13.762 MiB    0.000 MiB   	if(flag_time == 1):
   182                             		sql_time = sql_time[:-2]
   183                             		db.write(sql_time, cursor, conn)
   184   13.762 MiB    0.000 MiB   	if(flag_timeComb == 1):
   185   13.762 MiB    0.000 MiB   		sql_timeComb = sql_timeComb[:-2]
   186   13.762 MiB    0.000 MiB   		db.write(sql_timeComb, cursor, conn)
   187   13.762 MiB    0.000 MiB   	if(flag_mapping == 1):
   188   13.762 MiB    0.000 MiB   		sql_mapping = sql_mapping[:-2]	
   189   13.762 MiB    0.000 MiB   		db.write(sql_mapping, cursor, conn)
   190                             
   191   13.762 MiB    0.000 MiB   	print count," lines inserted into the DB"
   192                             
   193   13.762 MiB    0.000 MiB   	cursor.close()


